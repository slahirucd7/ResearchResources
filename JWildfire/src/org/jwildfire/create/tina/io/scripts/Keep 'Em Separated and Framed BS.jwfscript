/*Keep 'Em Separated and Framed BS
ScriptInfo
author="Brad Stefanov" category="Randomizer"
info="Based on a flame by Brad Stefanov "
suggestion: Only replaced the mobius variation with other variaitons. 
*/


import org.jwildfire.create.tina.base.Flame;
import org.jwildfire.create.tina.base.XForm;
import org.jwildfire.create.tina.palette.RGBPalette;
import org.jwildfire.create.tina.script.ScriptRunnerEnvironment;
import org.jwildfire.create.tina.transform.XFormTransformService;
import org.jwildfire.create.tina.base.Layer;
import org.jwildfire.create.tina.base.DrawMode;
import org.jwildfire.create.tina.base.ColorType;
import org.jwildfire.create.tina.variation.Variation;
import org.jwildfire.create.tina.variation.VariationFunc;
import org.jwildfire.create.tina.variation.VariationFuncList;
import org.jwildfire.create.tina.mutagen.RandomGradientMutation;
import org.jwildfire.create.tina.transform.XFormTransformService;
import org.jwildfire.create.tina.base.EditPlane;
import org.jwildfire.create.tina.randomgradient.StripesRandomGradientGenerator;

//Add a random number procedure (thanks Jesus Sosa)
public int range(int min, int max) {
    return min + (int)(Math.random() * (max - min + 1));
}
public double range(double min, double max) {
    return min + Math.random() * (max - min);

}
public void run(ScriptRunnerEnvironment pEnv) throws Exception {

    boolean fadeColors = false;
    int randomPoints = 10;
    boolean uniformWidth = false;
    StripesRandomGradientGenerator gradientGen = new StripesRandomGradientGenerator();
    RGBPalette newGradient = gradientGen.generatePalette(randomPoints, fadeColors, uniformWidth);

    // create a new flame
  Flame flame=new Flame();
  flame.getLayers().clear(); // get rid of the default layer because we create all layers by ourselves
  // set the flame main attributes
  flame.setCamRoll(0);
  flame.setCentreX(0);
  flame.setCentreY(0);
  flame.setCamPitch(0);
  flame.setCamYaw(0);
  flame.setCamPerspective(0);
  flame.setWidth(650);
  flame.setHeight(650);
  flame.setPixelsPerUnit(300.0);
  flame.setCamZoom(1);
  flame.setBGTransparency(false);
  flame.setName("Keep 'Em Separated and Framed BS by Brad Stefanov");   
  // Uncomment setBrightness or setGamma if essential for the flame
   //flame.setBrightness(9.37);
   flame.setGamma(4.24);
   flame.setGammaThreshold(0.082);
  flame.setPreserveZ(false);
  // create layer 1
  {
    Layer layer = new Layer();
    flame.getLayers().add(layer);
    layer.setWeight(1);
    layer.setVisible(true);
    // create a random gradient
    new RandomGradientMutation().execute(layer);
    // create transform 1
    {
      XForm xForm = new XForm();
      layer.getXForms().add(xForm);
      xForm.setWeight(10);
      xForm.setColor(0.1710695);
      xForm.setColorSymmetry(0.8361982);
      xForm.setDrawMode(DrawMode.NORMAL);
      xForm.setMaterial(0);
      xForm.setMaterialSpeed(0);

      xForm.setCoeff00(0.0); // a
      xForm.setCoeff10(1.0); // b
      xForm.setCoeff20(0); // e
      xForm.setCoeff01(-1.0); // c
      xForm.setCoeff11(0.0); // d
      xForm.setCoeff21(0); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0);
      xForm.setPostCoeff21(0);

      // variation 1
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("mobius", true);
        varFunc.setParameter("re_a", 1);
        varFunc.setParameter("re_b", 0);
        varFunc.setParameter("re_c", -0);
        varFunc.setParameter("re_d", 1);
        varFunc.setParameter("im_a", 0);
        varFunc.setParameter("im_b", -0);
        varFunc.setParameter("im_c", -0);
        varFunc.setParameter("im_d", 0);
        xForm.addVariation(1, varFunc);
      }
//Randomize prerecip (Thanks Michael Bourne)

          int intselect;
            String powchoice[] = {
                "sqrtpow",
                "dividepow",
                //"reciprocalpow",
                "asinhpow",
                "acoshpow",
                "atanhpow",
                "asechpow",
                "acosechpow",
                "acothpow",
                "logpow",
                "exppow",
            };

            int listLength = powchoice.length;
            intselect = range(1, listLength);

            // variation 2
            {
                VariationFunc varFunc = VariationFuncList.getVariationFuncInstance("pre_recip", true);
                varFunc.setParameter("reciprocalpow", 1);
                varFunc.setParameter((powchoice[range(1, listLength) - 1]), 1);
                varFunc.setParameter("zx_mult", 1);
                varFunc.setParameter("zy_mult", 1);
                varFunc.setParameter("zx_add", 0);
                varFunc.setParameter("zy_add", 0);
                xForm.addVariation(1, varFunc);
            }
      // variation 3
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("post_crop", true);
        varFunc.setParameter("left", -1);
        varFunc.setParameter("right", 1);
        varFunc.setParameter("top", -1);
        varFunc.setParameter("bottom", 1);
        varFunc.setParameter("scatter_area", 0);
        varFunc.setParameter("zero", 1);
        xForm.addVariation(1, varFunc);
      }
      // variation 4
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("post_smartcrop", true);
        varFunc.setParameter("power", 4);
        varFunc.setParameter("radius", -0);
        varFunc.setParameter("roundstr", 0);
        varFunc.setParameter("roundwidth", 1);
        varFunc.setParameter("distortion", 1);
        varFunc.setParameter("edge", 0);
        varFunc.setParameter("scatter", 0);
        varFunc.setParameter("offset", 0);
        varFunc.setParameter("cropmode", 2);
        varFunc.setParameter("static", 2);
        xForm.addVariation(1, varFunc);
      }
      // set default edit plane
      flame.setEditPlane(EditPlane.XY);
      // random affine transforms (uncomment to play around)
         XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
         XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
         XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
    // create transform 2
    {
      XForm xForm = new XForm();
      layer.getXForms().add(xForm);
      xForm.setWeight(2);
      xForm.setColor(0.41430718);
      xForm.setColorSymmetry(0.42188656);
      xForm.setDrawMode(DrawMode.NORMAL);
      xForm.setMaterial(0);
      xForm.setMaterialSpeed(0);

      xForm.setCoeff00(1); // a
      xForm.setCoeff10(0); // b
      xForm.setCoeff20(0); // e
      xForm.setCoeff01(0); // c
      xForm.setCoeff11(1); // d
      xForm.setCoeff21(0); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0);
      xForm.setPostCoeff21(0);

      // variation 1
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("separation", true);
        varFunc.setParameter("x", 0);
        varFunc.setParameter("xinside", 0);
        varFunc.setParameter("y", 1.125);
        varFunc.setParameter("yinside", -1);
        xForm.addVariation(1, varFunc);
      }
      // set default edit plane
      flame.setEditPlane(EditPlane.XY);
      // random affine transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
    // create transform 3
    {
      XForm xForm = new XForm();
      layer.getXForms().add(xForm);
      xForm.setWeight(2);
      xForm.setColor(0.27060318);
      xForm.setColorSymmetry(0.78412741);
      xForm.setDrawMode(DrawMode.NORMAL);
      xForm.setMaterial(0);
      xForm.setMaterialSpeed(0);

      xForm.setCoeff00(1); // a
      xForm.setCoeff10(0); // b
      xForm.setCoeff20(0); // e
      xForm.setCoeff01(0); // c
      xForm.setCoeff11(1); // d
      xForm.setCoeff21(0); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0);
      xForm.setPostCoeff21(0);

      // variation 1
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("separation", true);
        varFunc.setParameter("x", -1.125);
        varFunc.setParameter("xinside", -1);
        varFunc.setParameter("y", 0);
        varFunc.setParameter("yinside", -0);
        xForm.addVariation(1, varFunc);
      }
      // set default edit plane
      flame.setEditPlane(EditPlane.XY);
      // random affine transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
    // create transform 4
    {
      XForm xForm = new XForm();
      layer.getXForms().add(xForm);
      xForm.setWeight(1.0);
      xForm.setColor(0);
      xForm.setColorSymmetry(0);
      xForm.setDrawMode(DrawMode.NORMAL);
      xForm.setMaterial(0);
      xForm.setMaterialSpeed(0);

      xForm.setCoeff00(1); // a
      xForm.setCoeff10(0); // b
      xForm.setCoeff20(0); // e
      xForm.setCoeff01(0); // c
      xForm.setCoeff11(1); // d
      xForm.setCoeff21(0); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0);
      xForm.setPostCoeff21(0);

      // variation 1
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("julian", true);
        varFunc.setParameter("power", 60);
        varFunc.setParameter("dist", 1);
        xForm.addVariation(1.5248, varFunc);
      }
      // variation 2
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("prepost_circlize", true);
        varFunc.setParameter("n", 4);
        varFunc.setParameter("rotation", 45);
        varFunc.setParameter("reverse", 0);
        xForm.addVariation(1, varFunc);
      }
      // set default edit plane
      flame.setEditPlane(EditPlane.XY);
      // random affine transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
    // create transform 5
    {
      XForm xForm = new XForm();
      layer.getXForms().add(xForm);
      xForm.setWeight(1.0);
      xForm.setColor(0);
      xForm.setColorSymmetry(0);
      xForm.setDrawMode(DrawMode.NORMAL);
      xForm.setMaterial(0);
      xForm.setMaterialSpeed(0);

      xForm.setCoeff00(1); // a
      xForm.setCoeff10(0); // b
      xForm.setCoeff20(0); // e
      xForm.setCoeff01(0); // c
      xForm.setCoeff11(1); // d
      xForm.setCoeff21(0); // f

      xForm.setPostCoeff00(1);
      xForm.setPostCoeff10(0);
      xForm.setPostCoeff01(0);
      xForm.setPostCoeff11(1);
      xForm.setPostCoeff20(0);
      xForm.setPostCoeff21(0);

      // variation 1
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("julian", true);
        varFunc.setParameter("power", -60);
        varFunc.setParameter("dist", 1);
        xForm.addVariation(1.444, varFunc);
      }
      // variation 2
      {
        VariationFunc varFunc=VariationFuncList.getVariationFuncInstance("prepost_circlize", true);
        varFunc.setParameter("n", 4);
        varFunc.setParameter("rotation", 45);
        varFunc.setParameter("reverse", 0);
        xForm.addVariation(1, varFunc);
      }
      // set default edit plane
      flame.setEditPlane(EditPlane.XY);
      // random affine transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
      // random affine post transforms (uncomment to play around)
      //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
      //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
      //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
    }
  }
  // Either update the currently selected flame (to not need to create a new thumbnail
  // in the thumbnail ribbon after each run of the script...
  Flame selFlame = pEnv.getCurrFlame();
  if(selFlame!=null) {
    selFlame.assign(flame);
    pEnv.refreshUI();
  }
  // ...or load the flame in the editor and refresh the UI
  else {
    pEnv.setCurrFlame(flame);
  }
}
