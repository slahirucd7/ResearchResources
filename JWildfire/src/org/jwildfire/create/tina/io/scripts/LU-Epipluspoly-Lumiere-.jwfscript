import org.jwildfire.create.tina.base.Flame;
import org.jwildfire.create.tina.base.XForm;
import org.jwildfire.create.tina.palette.RGBPalette;
import org.jwildfire.create.tina.script.ScriptRunnerEnvironment;
import org.jwildfire.create.tina.transform.XFormTransformService;
import org.jwildfire.create.tina.base.Layer;
import org.jwildfire.create.tina.variation.Variation;
import org.jwildfire.create.tina.variation.VariationFunc;
import org.jwildfire.create.tina.variation.VariationFuncList;
import org.jwildfire.create.tina.mutagen.RandomGradientMutation;
import org.jwildfire.create.tina.transform.XFormTransformService;
import org.jwildfire.create.tina.base.EditPlane;
import org.jwildfire.create.tina.base.BGColorType;
import org.jwildfire.create.tina.palette.RGBColor;

//Add a random number procedure (thanks Jesus Sosa)
public int range(int min, int max) {
    return min + (int)(Math.random() * (max - min + 1));
}
// Rick Sidwell Random range for non integers

public double range(double min, double max) {
    return min + Math.random() * (max - min);
}

public void run(ScriptRunnerEnvironment pEnv)throws Exception {
    // create a new flame
    Flame flame = new Flame();
    flame.getLayers().clear(); // get rid of the default layer because we create all layers by ourselves
    // set the flame main attributes
    flame.setCamRoll(574.28);
    flame.setCentreY(0.0022771);
    flame.setCentreX(0.2240929);
    flame.setCamPitch(0);
    flame.setCamYaw(0);
    flame.setCamPerspective(0);
    flame.setWidth(864);
    flame.setHeight(648);
    flame.setPixelsPerUnit(110.637576);
    flame.setCamZoom(1.812);
    flame.setBGTransparency(false);
    flame.setName("Lumiere Scripts by Michael Bourne");
    flame.setBgColorType(BGColorType.SINGLE_COLOR);
    flame.setBgColorRed(0);
    flame.setBgColorGreen(0);
    flame.setBgColorBlue(0);
    flame.setBrightness(6);
    flame.setBalanceRed(Math.random());
    flame.setBalanceBlue(Math.random());
    flame.setBalanceGreen(Math.random());
    flame.setGamma(1.29);
    // create layer 1
    {
        Layer layer = new Layer();
        flame.getLayers().add(layer);
        layer.setWeight(1);
        layer.setVisible(true);
        // create a random gradient
        new RandomGradientMutation().execute(layer);
        // create transform 1
        {
            XForm xForm = new XForm();
            layer.getXForms().add(xForm);
            xForm.setWeight(0.5);
            xForm.setColor(0.43280516);
            xForm.setColorSymmetry(-0.5625);
            xForm.setMaterial(0);
            xForm.setMaterialSpeed(0);

            xForm.setCoeff00(0.21185777); // a
            xForm.setCoeff10(-0.07270128); // b
            xForm.setCoeff20(7.248685); // e
            xForm.setCoeff01(-0.53214732); // c
            xForm.setCoeff11(-0.41975633); // d
            xForm.setCoeff21(1.986872); // f

            xForm.setPostCoeff00(1);
            xForm.setPostCoeff10(0);
            xForm.setPostCoeff01(-0);
            xForm.setPostCoeff11(-1);
            xForm.setPostCoeff20(-0.4955612);
            xForm.setPostCoeff21(-0.6180718);

            // variation 1
            xForm.addVariation(0.1672758, VariationFuncList.getVariationFuncInstance("polar", true));
            // variation 2
            xForm.addVariation(0.16875, VariationFuncList.getVariationFuncInstance("noise", true));
            // variation 3
            xForm.addVariation(0.16875, VariationFuncList.getVariationFuncInstance("blur", true));
            // variation 4
            xForm.addVariation(0.16875, VariationFuncList.getVariationFuncInstance("gaussian_blur", true));
            // set default edit plane
            flame.setEditPlane(EditPlane.XY);
            // random affine transforms (uncomment to play around)
            //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
            //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
            //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
            // random affine post transforms (uncomment to play around)
            //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
            //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
            //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
        }
        // create transform 2
        {
            XForm xForm = new XForm();
            layer.getXForms().add(xForm);
            xForm.setWeight(range(1.0, 6.0));
            xForm.setColor(0.48754831);
            xForm.setColorSymmetry(0.50625);
            xForm.setMaterial(0);
            xForm.setMaterialSpeed(0);

            xForm.setCoeff00(0.550019); // a
            xForm.setCoeff10(-0.4790239); // b
            xForm.setCoeff20(-0.74389853); // e
            xForm.setCoeff01(0.37961123); // c
            xForm.setCoeff11(0.470572); // d
            xForm.setCoeff21(0.29067791); // f

            xForm.setPostCoeff00(1);
            xForm.setPostCoeff10(0.03312698);
            xForm.setPostCoeff01(0.00168138);
            xForm.setPostCoeff11(1.03116944);
            xForm.setPostCoeff20(-0.01602183);
            xForm.setPostCoeff21(0);

            // variation 1
            {
                VariationFunc varFunc = VariationFuncList.getVariationFuncInstance("epispiral", true);

                xForm.addVariation(range(-0.06, 0.5), varFunc);
            }
            // variation 2
            xForm.addVariation(range(5.04, 5.9), VariationFuncList.getVariationFuncInstance("spherical3D", true));
            // variation 3
            xForm.addVariation(range(0.2835, 0.4355), VariationFuncList.getVariationFuncInstance("polylogarithm", true));
            // set default edit plane
            flame.setEditPlane(EditPlane.XY);
            // random affine transforms (uncomment to play around)
            //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
            //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
            XFormTransformService.localTranslate(xForm, 1.0 - 2.0 * Math.random(), 1.0 - 2.0 * Math.random(), false);
            // random affine post transforms (uncomment to play around)
            //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
            //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
            //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
        }
        // create transform 3
        {
            XForm xForm = new XForm();
            layer.getXForms().add(xForm);
            xForm.setWeight(0.5);
            xForm.setColor(0);
            xForm.setColorSymmetry(0);
            xForm.setMaterial(0);
            xForm.setMaterialSpeed(0);

            xForm.setCoeff00(1); // a
            xForm.setCoeff10(0); // b
            xForm.setCoeff20(0); // e
            xForm.setCoeff01(0); // c
            xForm.setCoeff11(1); // d
            xForm.setCoeff21(0); // f

            xForm.setPostCoeff00(1);
            xForm.setPostCoeff10(0);
            xForm.setPostCoeff01(0);
            xForm.setPostCoeff11(1);
            xForm.setPostCoeff20(0);
            xForm.setPostCoeff21(0);

            // variation 1
            xForm.addVariation(1, VariationFuncList.getVariationFuncInstance("rays", true));
            // variation 2
            {
                VariationFunc varFunc = VariationFuncList.getVariationFuncInstance("post_axis_symmetry_wf", true);
                varFunc.setParameter("axis", 0);
                varFunc.setParameter("centre_x", 0.25);
                varFunc.setParameter("centre_y", 0.5);
                varFunc.setParameter("centre_z", 0.5);
                varFunc.setParameter("rotation", range(1, 30));
                varFunc.setParameter("x1colorshift", 0);
                varFunc.setParameter("y1colorshift", 0);
                varFunc.setParameter("z1colorshift", 0);
                varFunc.setParameter("x2colorshift", 0);
                varFunc.setParameter("y2colorshift", 0);
                varFunc.setParameter("z2colorshift", 0);
                xForm.addVariation(1, varFunc);
            }
            // set default edit plane
            flame.setEditPlane(EditPlane.XY);
            // random affine transforms (uncomment to play around)
            //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
            //   XFormTransformService.rotate(xForm, 360.0*Math.random(), false);
            //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), false);
            // random affine post transforms (uncomment to play around)
            //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
            //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
            //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
        }
        // create final transform 1
        {
            XForm xForm = new XForm();
            layer.getFinalXForms().add(xForm);
            xForm.setWeight(0);
            xForm.setColor(0);
            xForm.setColorSymmetry(1);
            xForm.setMaterial(0);
            xForm.setMaterialSpeed(0);

            xForm.setCoeff00(0.26545742); // a
            xForm.setCoeff10(-0.5936902); // b
            xForm.setCoeff20(0.37878788); // e
            xForm.setCoeff01(0.5936902); // c
            xForm.setCoeff11(0.26545742); // d
            xForm.setCoeff21(0.44077135); // f

            xForm.setPostCoeff00(1);
            xForm.setPostCoeff10(0);
            xForm.setPostCoeff01(0);
            xForm.setPostCoeff11(1);
            xForm.setPostCoeff20(0);
            xForm.setPostCoeff21(0);

            // variation 1
            {
                VariationFunc varFunc = VariationFuncList.getVariationFuncInstance("hypertile3D2", true);
                varFunc.setParameter("p", range(3, 5));
                varFunc.setParameter("q", range(4, 12));
                xForm.addVariation(1, varFunc);
            }

            // variation 2
            {
                VariationFunc varFunc = VariationFuncList.getVariationFuncInstance("post_axis_symmetry_wf", true);
                varFunc.setParameter("axis", 0);
                varFunc.setParameter("centre_x", 0.25);
                varFunc.setParameter("centre_y", 0.5);
                varFunc.setParameter("centre_z", 0.5);
                varFunc.setParameter("rotation", 5);
                varFunc.setParameter("x1colorshift", 0);
                varFunc.setParameter("y1colorshift", 0);
                varFunc.setParameter("z1colorshift", 0);
                varFunc.setParameter("x2colorshift", 0);
                varFunc.setParameter("y2colorshift", 0);
                varFunc.setParameter("z2colorshift", 0);
                xForm.addVariation(1, varFunc);
            }
            // set default edit plane
            flame.setEditPlane(EditPlane.XY);
            // random affine transforms (uncomment to play around)
            //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, false);
            XFormTransformService.rotate(xForm, 60.0 * Math.random(), false);
            XFormTransformService.localTranslate(xForm, 1.0 - 2.0 * Math.random(), 1.0 - 2.0 * Math.random(), false);
            // random affine post transforms (uncomment to play around)
            //   XFormTransformService.scale(xForm, 1.25-Math.random()*0.5, true, true, true);
            //   XFormTransformService.rotate(xForm, 360.0*Math.random(), true);
            //   XFormTransformService.localTranslate(xForm, 1.0-2.0*Math.random(), 1.0-2.0*Math.random(), true);
        }
    }
    // Either update the currently selected flame (to not need to create a new thumbnail
    // in the thumbnail ribbon after each run of the script...
    Flame selFlame = pEnv.getCurrFlame();
    if (selFlame != null) {
        selFlame.assign(flame);
        pEnv.refreshUI();
    }
    // ...or load the flame in the editor and refresh the UI
    else {
        pEnv.setCurrFlame(flame);
    }
}
