/* SuperSusan_by_MickHogan.jwfscript
   Written by MickHogan, 01/21/2013  Rev.1

   Based on "Super Susan" Scripted By Phoenix Key Black  for Apophysis           
   http://phoenixkeyblack.deviantart.com/    

   
   Dedicated to the folks @ J-Wildfire Users Group,
   https://www.facebook.com/groups/jwildfire/517981271556185/?notif_t=like   .

   This is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser
   General Public License as published by the Free Software Foundation; either version 2.1 of the
   License, or (at your option) any later version.

   This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
   even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License along with this software;
   if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
   02110-1301 USA, or see the FSF site: http://www.fsf.org.

    ENJOY !! */

import org.jwildfire.script.ActionList;
import org.jwildfire.create.tina.base.Flame;
import org.jwildfire.create.tina.base.XForm;
import org.jwildfire.base.mathlib.MathLib;
import org.jwildfire.create.tina.random.RandomNumberGenerator;
import org.jwildfire.create.tina.transform.XFormTransformService;
import org.jwildfire.create.tina.variation.VariationFunc;
import org.jwildfire.create.tina.variation.VariationFuncList;
import org.jwildfire.create.tina.script.ScriptRunnerEnvironment;


import org.jwildfire.create.tina.variation.CrackleFunc;
import org.jwildfire.create.tina.variation.JuliaNFunc;
import org.jwildfire.create.tina.variation.LazySusanFunc;
import org.jwildfire.create.tina.variation.Linear3DFunc;
import org.jwildfire.create.tina.variation.BipolarFunc;
import org.jwildfire.create.tina.variation.SphericalFunc;
import org.jwildfire.create.tina.variation.BubbleFunc;
import org.jwildfire.create.tina.variation.CPowFunc;
import org.jwildfire.create.tina.variation.JuliaFunc;
import org.jwildfire.create.tina.variation.JuliaScopeFunc;


    double sw = 1;

  public void run(ScriptRunnerEnvironment pEnv) throws Exception {
  XForm xForm1;
  VariationFunc varFunc;
  Flame currFlame = pEnv.getCurrFlame();
  if(currFlame==null) {
    throw new Exception("Please select a flame at first");
  }

 // currFlame.getXForms().clear();
  currFlame.getFinalXForms().clear();

/*
       String str = javax.swing.JOptionPane.showInputDialog(null, "Please Enter Susan Weight", "Super Susan", 1);
       sw = Double.parseDouble(str);   // Converts above str value into a number
*/
 sw = 0.15 + Math.random() * 10.0;

  // First transform (T1)
  {
     VariationFunc varFunc1 = new JuliaNFunc();
     varFunc1.setParameter("power", 8000);
     varFunc1.setParameter("dist", 1);
     XForm xForm = new XForm();
     xForm.addVariation(1.0, varFunc1);     

    org.jwildfire.create.tina.transform.XFormTransformService.localTranslate(xForm, Math.random(), Math.random(), false);

    org.jwildfire.create.tina.transform.XFormTransformService.scale(xForm, Math.random(), false, false, false);
    org.jwildfire.create.tina.transform.XFormTransformService.rotate(xForm, 360 * Math.random(), false);

    xForm.setWeight(Math.random() * 5);

    xForm.setColor(Math.random());
    xForm.setColorSymmetry(0.0);

    currFlame.getXForms().add(xForm);  
  }

  // Second transform (T2)
  {
     VariationFunc varFunc2 = new JuliaScopeFunc();
     varFunc2.setParameter("power", 2.0);
     varFunc2.setParameter("dist", 1.0);

     XForm xForm = new XForm();
     xForm.addVariation(1.0, varFunc2);     

     org.jwildfire.create.tina.transform.XFormTransformService.localTranslate(xForm, Math.random(), Math.random(), false);
    org.jwildfire.create.tina.transform.XFormTransformService.scale(xForm, Math.random(), false, false, false);
    org.jwildfire.create.tina.transform.XFormTransformService.rotate(xForm, 360 * Math.random(), false);

    xForm.setWeight(Math.random() * 5);
    xForm.setColor(0.0);
    xForm.setColorSymmetry(0.0);

    currFlame.getXForms().add(xForm);  
  }



  // Third transform (T3)
  {
     VariationFunc varFunc3 = new LazySusanFunc();
     varFunc3.setParameter("space", 0.0);
     varFunc3.setParameter("twist", 0.0);
     varFunc3.setParameter("spin", (Math.random() * 10));
     varFunc3.setParameter("x", 0.0);
     varFunc3.setParameter("y", 0.0);
     XForm xForm = new XForm();
     xForm.addVariation(1.0, varFunc3);  

//    xForm.setWeight((MathLib.trunc((Math.random() * 1000)/10))*10);
    xForm.setWeight(sw);
 
      xForm.setCoeff00(-1.0);   // a (X1)
      xForm.setCoeff10(0.0); // b (Y1)
      xForm.setCoeff20(0.0);  // e (O1)
      xForm.setCoeff01(0.0);  // c (X2)
      xForm.setCoeff11(-1.0);  // d (Y2)
      xForm.setCoeff21(0.0); // f (O2)

    org.jwildfire.create.tina.transform.XFormTransformService.localTranslate(xForm, -Math.random(), Math.random(), false);
    org.jwildfire.create.tina.transform.XFormTransformService.rotate(xForm, Math.random() * 30, false);

    xForm.setColor(Math.random());
    xForm.setColorSymmetry(0.67);

    currFlame.getXForms().add(xForm);  
  }

  // Final transform (T4)
  {
     VariationFunc varFunc4 = new CPowFunc();
     varFunc4.setParameter("power", MathLib.trunc(Math.random() * 10));
     varFunc4.setParameter("r", 1.0);
     varFunc4.setParameter("i", 0);
     varFunc4.setParameter("power", 4.0 + (Math.random() * 10));

     XForm xForm = new XForm();
     xForm.addVariation(1.0, varFunc4);     

    xForm.setWeight(Math.random() * 5);
    xForm.setColor(Math.random());
    xForm.setColorSymmetry(0.0);

    currFlame.getFinalXForms().add(xForm); 
  }

  // Final transform (T5)
  {
    XForm xForm = new XForm();
    xForm.addVariation(1.0, new Linear3DFunc());
    xForm.addVariation(0.02, new SphericalFunc());

  
    currFlame.getFinalXForms().add(xForm); 
  }

  // Final settings   
  //  currFlame.getFinalXForms().clear();

  currFlame.setCentreX(0.0);
  currFlame.setCentreY(0.0);
  currFlame.setCamRoll(0.0);
  currFlame.setCamPitch(0.0);
  currFlame.setCamYaw(0.0);
  currFlame.setCamPerspective(0.0);
  currFlame.setPixelsPerUnit(150);

  // Refresh the UI
  pEnv.refreshUI();

}    // END CODE
